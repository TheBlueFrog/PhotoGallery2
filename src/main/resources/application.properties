
# there are different profiles for stage and production
# the profile is set via the environment var BUILD_TYPE
#
# set BUILD_TYPE = production gets you get a production .jar
# "stage" gets you a stage .jar
#
# not clear if the .jars are actually different, may be
# that we only need one, they are the same exact size
# but diff says they are different
#
# at this point the big difference is the use of SSL on
# production and not stage
#
# this sorta overlaps with the --production command line flag
# the code listens to that to decide various things
#
# see the
# milkrun.service  systemd script
# milkrun.sh
#
# getting a bunch of layers here
#

# database access
spring.datasource.url=jdbc:postgresql://localhost/photo
spring.datasource.username=photo
spring.datasource.password=photo
spring.jpa.generate-ddl=true

logging.path log
#logging.level=DEBUG
logging.level.com.mike.website3=DEBUG
server.error.whitelabel.enabled=false

# where FTL templates come from, this defines a search order
spring.freemarker.template-loader-path=classpath:/templates/

# Prefer file system access for template loading. File system access enables hot detection of template changes.
spring.freemarker.prefer-file-system-access=true

# can't get this to work
#spring.resources.static-locations=file:../static/images/**,file:../static/js/**
#spring.mvc.static-path-pattern=file:e:/static/**/

spring.resources.static-locations=file:../static/,classpath:/static

spring.http.multipart.max-file-size=800MB
spring.http.multipart.max-request-size=800MB

spring.profiles.active=${RUNTIME_ENV}